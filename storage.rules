rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Temel fonksiyonlar
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.rol == 'yonetici' || 
         request.auth.token.rol == 'admin' || 
         request.auth.token.rol == 'superadmin');
    }

    function isTechnician() {
      return isAuthenticated() && 
        (request.auth.token.rol == 'tekniker' || 
         request.auth.token.rol == 'muhendis');
    }

    function hasUploadPermission() {
      return isAuthenticated() && 
        (isAdmin() || isTechnician());
    }

    // Yedek kural: eğer token'da rol yoksa, varsayılan olarak doğrulanmış kullanıcılara izin ver
    // Bu kural geçici olarak eklenmiştir, rol tabanlı kontroller çalışınca kaldırılabilir
    match /{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Stoklar klasörü için kurallar
    match /stoklar/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Geçici olarak tüm kimlik doğrulamalı kullanıcılara izin ver
    }

    // Diğer klasörler için kurallar
    match /arizalar/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    match /cozumler/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    match /profil/{userId}/{document=**} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId || isAdmin();
    }

    match /rapor/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}